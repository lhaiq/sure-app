<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengsu.sure.invite.repository.DictionaryRepository" >
  <resultMap id="BaseResultMap" type="com.hengsu.sure.invite.entity.Dictionary" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, description, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dictionary
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dictionary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hengsu.sure.invite.entity.Dictionary" >
    insert into dictionary (id, content, description, 
      type)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.sure.invite.entity.Dictionary" >
    insert into dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.sure.invite.entity.Dictionary" >
    update dictionary
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.sure.invite.entity.Dictionary" >
    update dictionary
    set content = #{content,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.hengsu.sure.invite.entity.Dictionary" >
    select count(*) from dictionary
    <where >
      <if test="id != null" >
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="content != null" >
        and content = #{content,jdbcType=VARCHAR}
      </if>
      <if test="description != null" >
        and description = #{description,jdbcType=VARCHAR}
      </if>
      <if test="type != null" >
        and type = #{type,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from dictionary where 1 = 1 
    <if test="param1.id != null" >
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.content != null" >
      and content = #{param1.content,jdbcType=VARCHAR}
    </if>
    <if test="param1.description != null" >
      and description = #{param1.description,jdbcType=VARCHAR}
    </if>
    <if test="param1.type != null" >
      and type = #{param1.type,jdbcType=INTEGER}
    </if>
    <if test="param2.sort != null" >
      order by 
      <foreach collection="param2.sort" item="order" separator="," >
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0" >
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>